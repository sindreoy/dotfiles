# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# Direnv
# (( ${+commands[direnv]} )) && emulate zsh -c "$(direnv export zsh)"

# Instant prompt
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi

# Direnv
# (( ${+commands[direnv]} )) && emulate zsh -c "$(direnv hook zsh)"


# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
# ZSH_THEME="powerlevel10k/powerlevel10k"
ZSH_THEME=""

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions fzf zsh-syntax-highlighting) 
#ZSH_HIGHLIGHT_STYLES[suffix-alias]=fg=green,underline
#ZSH_HIGHLIGHT_STYLES[precommand]=fg=green,underline
#ZSH_HIGHLIGHT_STYLES[arg0]=fg=green
source $ZSH/oh-my-zsh.sh

# Pure prompt configuration
fpath+=$HOME/.zsh/pure

autoload -U promptinit; promptinit

prompt pure

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Override cat with bat
alias cat="bat --paging=never"

# Fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Node specific stuff
# export PATH="/opt/homebrew/opt/node@16/bin:$PATH"
# export LDFLAGS="-L/opt/homebrew/opt/node@16/lib"
# export CPPFLAGS="-I/opt/homebrew/opt/node@16/include"

# Set editor
export EDITOR='vim'

# Git aliases
alias rebase='git fetch origin main && git rebase origin/main && git push -f'
alias merge='git fetch origin main && git merge origin/main && git push'

# Alias python shell
alias shp='python manage.py shell_plus'

# Alias run django server
# Remember to do npm run build:production so you dont have to run vite
alias runserver='python manage.py runserver localhost:8000'
alias migrate='python manage.py migrate'

# Configure direnv
eval "$(direnv hook zsh)"
# Configure the fuck
eval $(thefuck --alias)

# Load my own shell functions
source "$HOME/.zshFunctions"

# Check for Linux or MacOS
{{- if eq .chezmoi.os "darwin" }}
# MacOS
########### My additions ###########
# Shell integrations
source ~/.iterm2_shell_integration.zsh

# Add klipy to alias 
alias tienda="cd ~/gitprojects/tienda"
alias tiendaweb="cd ~/gitprojects/tienda-web"
alias spmicro="cd ~/gitprojects/snowplow-micro-configuration"
alias klipy="/Users/sindre/gitprojects/klipy/.venv/bin/python -m klipy"
alias velo="~/gitprojects/velo/.venv/bin/python -m velo.cli.main"

# Configure custom path
export PATH="/Users/sindre/.klipy/bin:$PATH"
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
. /opt/homebrew/opt/asdf/libexec/asdf.sh
# export GOOGLE_APPLICATION_CREDENTIALS="$HOME/.config/gcloud/kolonial-terraform-admin.json"

# Add FZF settings
export FZF_BASE=/opt/homebrew/bin/fzf
DISABLE_FZF_AUTO_COMPLETION="false"
DISABLE_FZF_KEY_BINDINGS="false"
    
# Alias tmuxinator
alias mux=tmuxinator
alias mst="mux start"
alias msp="mux stop"

# Virtualenvwrapper
#export VIRTUALENVWRAPPER_PYTHON=/opt/homebrew/bin/python3
#export VIRTUALENVWRAPPER_VIRTUALENV=/opt/homebrew/bin/virtualenv
#export WORKON_HOME=$HOME/.virtualenvs
#export PROJECT_HOME=$HOME/Devel
#source /opt/homebrew/bin/virtualenvwrapper.sh

# Ngrok
export PATH="/Users/sindre/executables:$PATH"
alias checkin='cd $HOME/gitprojects/deskbooker && deskbooker checkin && cd -'

{{- end }}

{{- if eq .chezmoi.os "linux" }}
# LINUX
# Check distribution
if [ -f /etc/os-release ]; then
    # freedesktop.org and systemd
    . /etc/os-release
    OS=$NAME
    VER=$VERSION_ID
elif type lsb_release >/dev/null 2>&1; then
    # linuxbase.org
    OS=$(lsb_release -si)
    VER=$(lsb_release -sr)
elif [ -f /etc/lsb-release ]; then
    # For some versions of Debian/Ubuntu without lsb_release command
    . /etc/lsb-release
    OS=$DISTRIB_ID
    VER=$DISTRIB_RELEASE
elif [ -f /etc/debian_version ]; then
    # Older Debian/Ubuntu/etc.
    OS=Debian
    VER=$(cat /etc/debian_version)
elif [ -f /etc/SuSe-release ]; then
    # Older SuSE/etc.
    ...
elif [ -f /etc/redhat-release ]; then
    # Older Red Hat, CentOS, etc.
    ...
else
    # Fall back to uname, e.g. "Linux <version>", also works for BSD, etc.
    OS=$(uname -s)
    VER=$(uname -r)
fi
# End check distribution

if [[ $OS == "Manjaro" ]]; then
    # Aliases
    alias tienda="cd $HOME/gitprojects/tienda"
    alias tiendaweb="cd ~/gitprojects/tienda-web"
    alias klipy="/home/sindre/gitprojects/klipy/.venv/bin/python -m klipy"
    alias open="xdg-open"

    #asdf version manager
    . /opt/asdf-vm/asdf.sh

    # Other stuff
    export PATH="/home/sindre/.klipy/bin:$PATH"
    # export GOOGLE_APPLICATION_CREDENTIALS="$HOME/.config/gcloud/kolonial-terraform-admin.json"
    # Node version manager
    # source /usr/share/nvm/init-nvm.sh

    # Ruby gems
    export GEM_HOME="$(ruby -e 'puts Gem.user_dir')"
    export PATH="$PATH:$GEM_HOME/bin"

    # Alias tmuxinator
    alias mux=tmuxinator
    alias mst="mux start"
    alias msp="mux stop"

elif [[ $OS == "Arch Linux" ]]; then 
    # Aliases
    alias tienda="cd $HOME/gitprojects/tienda"
    alias tiendaweb="cd ~/gitprojects/tienda-web"
    alias klipy="/home/sindre/gitprojects/klipy/.venv/bin/python -m klipy"
    alias open="xdg-open"

    #asdf version manager
    . /opt/asdf-vm/asdf.sh
    
    # Other stuff
    export PATH="/home/sindre/.klipy/bin:$PATH"
    
    # Ruby gems
    export GEM_HOME="$(ruby -e 'puts Gem.user_dir')"
    export PATH="$PATH:$GEM_HOME/bin"
fi
{{- end }}
